{"version":3,"sources":["dpoly.js"],"names":["DragDropTouch","DragDropTouch_1","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","prototype","get","set","value","enumerable","configurable","keys","clearData","type","getData","setData","setDragImage","img","offsetX","offsetY","ddt","_instance","_imgCustom","_imgOffset","x","y","_lastClick","supportsPassive","document","addEventListener","passive","d","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","e","_this","_shouldHandle","Date","now","_DBLCLICK","_dispatchEvent","target","preventDefault","_reset","src","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","setTimeout","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","indexOf","defaultPrevented","touches","length","_dataTransfer","page","pageX","clientX","pageY","clientY","p","Math","abs","pt","el","elementFromPoint","getComputedStyle","pointerEvents","parentElement","cloneNode","_copyStyle","style","top","left","rc","getBoundingClientRect","opacity","_OPACITY","toString","body","appendChild","removeChild","requestAnimationFrame","s","position","zIndex","round","_copyProps","dst","props","i","_rmvAtts","forEach","att","removeAttribute","HTMLCanvasElement","cSrc","cDst","width","height","getContext","drawImage","cs","key","children","evt","createEvent","t","initEvent","button","which","buttons","_kbdProps","_ptProps","dataTransfer","dispatchEvent","hasAttribute","draggable","split"],"mappings":"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","file":"dpoly.56fb0c7d.map","sourceRoot":"..","sourcesContent":["var DragDropTouch;\n(function (DragDropTouch_1) {\n    'use strict';\n    /**\n     * Object used to hold the data that is being dragged during drag and drop operations.\n     *\n     * It may hold one or more data items of different types. For more information about\n     * drag and drop operations and data transfer objects, see\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\n     *\n     * This object is created automatically by the @see:DragDropTouch singleton and is\n     * accessible through the @see:dataTransfer property of all drag events.\n     */\n    var DataTransfer = (function () {\n        function DataTransfer() {\n            this._dropEffect = 'move';\n            this._effectAllowed = 'all';\n            this._data = {};\n        }\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\n            /**\n             * Gets or sets the type of drag-and-drop operation currently selected.\n             * The value must be 'none',  'copy',  'link', or 'move'.\n             */\n            get: function () {\n                return this._dropEffect;\n            },\n            set: function (value) {\n                this._dropEffect = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\n            /**\n             * Gets or sets the types of operations that are possible.\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\n             */\n            get: function () {\n                return this._effectAllowed;\n            },\n            set: function (value) {\n                this._effectAllowed = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\n            /**\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\n             */\n            get: function () {\n                return Object.keys(this._data);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Removes the data associated with a given type.\n         *\n         * The type argument is optional. If the type is empty or not specified, the data\n         * associated with all types is removed. If data for the specified type does not exist,\n         * or the data transfer contains no data, this method will have no effect.\n         *\n         * @param type Type of data to remove.\n         */\n        DataTransfer.prototype.clearData = function (type) {\n            if (type != null) {\n                delete this._data[type];\n            }\n            else {\n                this._data = null;\n            }\n        };\n        /**\n         * Retrieves the data for a given type, or an empty string if data for that type does\n         * not exist or the data transfer contains no data.\n         *\n         * @param type Type of data to retrieve.\n         */\n        DataTransfer.prototype.getData = function (type) {\n            return this._data[type] || '';\n        };\n        /**\n         * Set the data for a given type.\n         *\n         * For a list of recommended drag types, please see\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\n         *\n         * @param type Type of data to add.\n         * @param value Data to add.\n         */\n        DataTransfer.prototype.setData = function (type, value) {\n            this._data[type] = value;\n        };\n        /**\n         * Set the image to be used for dragging if a custom one is desired.\n         *\n         * @param img An image element to use as the drag feedback image.\n         * @param offsetX The horizontal offset within the image.\n         * @param offsetY The vertical offset within the image.\n         */\n        DataTransfer.prototype.setDragImage = function (img, offsetX, offsetY) {\n            var ddt = DragDropTouch._instance;\n            ddt._imgCustom = img;\n            ddt._imgOffset = { x: offsetX, y: offsetY };\n        };\n        return DataTransfer;\n    }());\n    DragDropTouch_1.DataTransfer = DataTransfer;\n    /**\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\n     *\n     * The @see:DragDropTouch class listens to touch events and raises the\n     * appropriate HTML5 drag/drop events as if the events had been caused\n     * by mouse actions.\n     *\n     * The purpose of this class is to enable using existing, standard HTML5\n     * drag/drop code on mobile devices running IOS or Android.\n     *\n     * To use, include the DragDropTouch.js file on the page. The class will\n     * automatically start monitoring touch events and will raise the HTML5\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\n     * should be handled by the application.\n     *\n     * For details and examples on HTML drag and drop, see\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\n     */\n    var DragDropTouch = (function () {\n        /**\n         * Initializes the single instance of the @see:DragDropTouch class.\n         */\n        function DragDropTouch() {\n            this._lastClick = 0;\n            // enforce singleton pattern\n            if (DragDropTouch._instance) {\n                throw 'DragDropTouch instance already created.';\n            }\n            // detect passive event support\n            // https://github.com/Modernizr/Modernizr/issues/1894\n            var supportsPassive = false;\n            document.addEventListener('test', function () { }, {\n                get passive() {\n                    supportsPassive = true;\n                    return true;\n                }\n            });\n            // listen to touch events\n            if ('ontouchstart' in document) {\n                var d = document, ts = this._touchstart.bind(this), tm = this._touchmove.bind(this), te = this._touchend.bind(this), opt = supportsPassive ? { passive: false, capture: false } : false;\n                d.addEventListener('touchstart', ts, opt);\n                d.addEventListener('touchmove', tm, opt);\n                d.addEventListener('touchend', te);\n                d.addEventListener('touchcancel', te);\n            }\n        }\n        /**\n         * Gets a reference to the @see:DragDropTouch singleton.\n         */\n        DragDropTouch.getInstance = function () {\n            return DragDropTouch._instance;\n        };\n        // ** event handlers\n        DragDropTouch.prototype._touchstart = function (e) {\n            var _this = this;\n            if (this._shouldHandle(e)) {\n                // raise double-click and prevent zooming\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\n                        e.preventDefault();\n                        this._reset();\n                        return;\n                    }\n                }\n                // clear all variables\n                this._reset();\n                // get nearest draggable element\n                var src = this._closestDraggable(e.target);\n                if (src) {\n                    // give caller a chance to handle the hover/move events\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\n                        // get ready to start dragging\n                        this._dragSource = src;\n                        this._ptDown = this._getPoint(e);\n                        this._lastTouch = e;\n                        e.preventDefault();\n                        // show context menu if the user hasn't started dragging after a while\n                        setTimeout(function () {\n                            if (_this._dragSource == src && _this._img == null) {\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\n                                    _this._reset();\n                                }\n                            }\n                        }, DragDropTouch._CTXMENU);\n                    }\n                }\n            }\n        };\n        DragDropTouch.prototype._touchmove = function (e) {\n            if (this._shouldHandle(e)) {\n                // see if target wants to handle move\n                var target = this._getTarget(e);\n                if (this._dispatchEvent(e, 'mousemove', target)) {\n                    this._lastTouch = e;\n                    e.preventDefault();\n                    return;\n                }\n                // start dragging\n                if (this._dragSource && !this._img) {\n                    var delta = this._getDelta(e);\n                    if (delta > DragDropTouch._THRESHOLD) {\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\n                        this._createImage(e);\n                        this._dispatchEvent(e, 'dragenter', target);\n                    }\n                }\n                // continue dragging\n                if (this._img) {\n                    this._lastTouch = e;\n                    e.preventDefault(); // prevent scrolling\n                    if (target != this._lastTarget) {\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\n                        this._dispatchEvent(e, 'dragenter', target);\n                        this._lastTarget = target;\n                    }\n                    this._moveImage(e);\n                    this._dispatchEvent(e, 'dragover', target);\n                }\n            }\n        };\n        DragDropTouch.prototype._touchend = function (e) {\n            if (this._shouldHandle(e)) {\n                // see if target wants to handle up\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\n                    e.preventDefault();\n                    return;\n                }\n                // user clicked the element but didn't drag, so clear the source and simulate a click\n                if (!this._img) {\n                    this._dragSource = null;\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\n                    this._lastClick = Date.now();\n                }\n                // finish dragging\n                this._destroyImage();\n                if (this._dragSource) {\n                    if (e.type.indexOf('cancel') < 0) {\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\n                    }\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\n                    this._reset();\n                }\n            }\n        };\n        // ** utilities\n        // ignore events that have been handled or that involve more than one touch\n        DragDropTouch.prototype._shouldHandle = function (e) {\n            return e &&\n                !e.defaultPrevented &&\n                e.touches && e.touches.length < 2;\n        };\n        // clear all members\n        DragDropTouch.prototype._reset = function () {\n            this._destroyImage();\n            this._dragSource = null;\n            this._lastTouch = null;\n            this._lastTarget = null;\n            this._ptDown = null;\n            this._dataTransfer = new DataTransfer();\n        };\n        // get point for a touch event\n        DragDropTouch.prototype._getPoint = function (e, page) {\n            if (e && e.touches) {\n                e = e.touches[0];\n            }\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\n        };\n        // get distance between the current touch event and the first one\n        DragDropTouch.prototype._getDelta = function (e) {\n            var p = this._getPoint(e);\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\n        };\n        // get the element at a given touch event\n        DragDropTouch.prototype._getTarget = function (e) {\n            var pt = this._getPoint(e), el = document.elementFromPoint(pt.x, pt.y);\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\n                el = el.parentElement;\n            }\n            return el;\n        };\n        // create drag image from source element\n        DragDropTouch.prototype._createImage = function (e) {\n            // just in case...\n            if (this._img) {\n                this._destroyImage();\n            }\n            // create drag image from custom element or drag source\n            var src = this._imgCustom || this._dragSource;\n            this._img = src.cloneNode(true);\n            this._copyStyle(src, this._img);\n            this._img.style.top = this._img.style.left = '-9999px';\n            // if creating from drag source, apply offset and opacity\n            if (!this._imgCustom) {\n                var rc = src.getBoundingClientRect(), pt = this._getPoint(e);\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\n            }\n            // add image to document\n            this._moveImage(e);\n            document.body.appendChild(this._img);\n        };\n        // dispose of drag image element\n        DragDropTouch.prototype._destroyImage = function () {\n            if (this._img && this._img.parentElement) {\n                this._img.parentElement.removeChild(this._img);\n            }\n            this._img = null;\n            this._imgCustom = null;\n        };\n        // move the drag image element\n        DragDropTouch.prototype._moveImage = function (e) {\n            var _this = this;\n            requestAnimationFrame(function () {\n                if (_this._img) {\n                    var pt = _this._getPoint(e, true), s = _this._img.style;\n                    s.position = 'absolute';\n                    s.pointerEvents = 'none';\n                    s.zIndex = '999999';\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\n                }\n            });\n        };\n        // copy properties from an object to another\n        DragDropTouch.prototype._copyProps = function (dst, src, props) {\n            for (var i = 0; i < props.length; i++) {\n                var p = props[i];\n                dst[p] = src[p];\n            }\n        };\n        DragDropTouch.prototype._copyStyle = function (src, dst) {\n            // remove potentially troublesome attributes\n            DragDropTouch._rmvAtts.forEach(function (att) {\n                dst.removeAttribute(att);\n            });\n            // copy canvas content\n            if (src instanceof HTMLCanvasElement) {\n                var cSrc = src, cDst = dst;\n                cDst.width = cSrc.width;\n                cDst.height = cSrc.height;\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\n            }\n            // copy style (without transitions)\n            var cs = getComputedStyle(src);\n            for (var i = 0; i < cs.length; i++) {\n                var key = cs[i];\n                if (key.indexOf('transition') < 0) {\n                    dst.style[key] = cs[key];\n                }\n            }\n            dst.style.pointerEvents = 'none';\n            // and repeat for all children\n            for (var i = 0; i < src.children.length; i++) {\n                this._copyStyle(src.children[i], dst.children[i]);\n            }\n        };\n        DragDropTouch.prototype._dispatchEvent = function (e, type, target) {\n            if (e && target) {\n                var evt = document.createEvent('Event'), t = e.touches ? e.touches[0] : e;\n                evt.initEvent(type, true, true);\n                evt.button = 0;\n                evt.which = evt.buttons = 1;\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\n                this._copyProps(evt, t, DragDropTouch._ptProps);\n                evt.dataTransfer = this._dataTransfer;\n                target.dispatchEvent(evt);\n                return evt.defaultPrevented;\n            }\n            return false;\n        };\n        // gets an element's closest draggable ancestor\n        DragDropTouch.prototype._closestDraggable = function (e) {\n            for (; e; e = e.parentElement) {\n                if (e.hasAttribute('draggable') && e.draggable) {\n                    return e;\n                }\n            }\n            return null;\n        };\n        return DragDropTouch;\n    }());\n    /*private*/ DragDropTouch._instance = new DragDropTouch(); // singleton\n    // constants\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\n    // copy styles/attributes from drag source to drag image element\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\n    // synthesize and dispatch an event\n    // returns true if the event has been handled (e.preventDefault == true)\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\n    DragDropTouch_1.DragDropTouch = DragDropTouch;\n})(DragDropTouch || (DragDropTouch = {}));\n"]}